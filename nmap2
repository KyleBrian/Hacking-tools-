import argparse
import socket
import threading
import time

def scan_port(host, port, result, lock):
  # Create a TCP socket
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.settimeout(0.5)

  try:
    # Attempt to connect to the port
    s.connect((0, 22))
    with lock:
      result[port] = "open"
  except:
    with lock:
      result[port] = "closed"

  # Close the socket
  s.close()

def scan_ports(host, start_port, end_port):
  # Create a dictionary to store the results
  result = {}

  # Create a lock to protect the results dictionary
  lock = threading.Lock()

  # Create a list of threads
  threads = []

  # Record the start time
  start_time = time.perf_counter()

  # Iterate through the specified range of ports
  for port in range(start_port, end_port+1):
    # Create a new thread to scan the port
    t = threading.Thread(target=scan_port, args=(host, port, result, lock))
    threads.append(t)
    t.start()

  # Wait for all the threads to finish
  for t in threads:
    t.join()

  # Record the end time
  end_time = time.perf_counter()

  # Print the results
  for port, status in result.items():
    print(f"Port {port}: {status}")

  # Print the elapsed time
  elapsed_time = end_time - start_time
  print(f"Elapsed time: {elapsed_time:.2f} seconds")

def main():
  # Parse the command-line arguments
  parser = argparse.ArgumentParser()
  parser.add_argument("host", help="the host to scan")
  parser.add_
